// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tank_Wiki_React_ASP_App.Server.Models;

#nullable disable

namespace Tank_Wiki_React_ASP_App.Server.Migrations
{
    [DbContext(typeof(db_TankWikiContext))]
    [Migration("20240822111624_AddedPictureInNation")]
    partial class AddedPictureInNation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Armor", b =>
                {
                    b.Property<int>("ArmorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArmorId"));

                    b.Property<int>("HullFront")
                        .HasColumnType("int");

                    b.Property<int>("HullRear")
                        .HasColumnType("int");

                    b.Property<int>("HullSide")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TankId")
                        .HasColumnType("int");

                    b.HasKey("ArmorId");

                    b.HasIndex("TankId")
                        .IsUnique()
                        .HasFilter("[TankId] IS NOT NULL");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Engine", b =>
                {
                    b.Property<int>("EngineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EngineId"));

                    b.Property<double>("FireChance")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("EngineId");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Gun", b =>
                {
                    b.Property<int>("GunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GunId"));

                    b.Property<double>("Accuracy")
                        .HasColumnType("float");

                    b.Property<double>("AimTime")
                        .HasColumnType("float");

                    b.Property<int>("Ammunition")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Penetration")
                        .HasColumnType("int");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<double>("RateOfFire")
                        .HasColumnType("float");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("GunId");

                    b.ToTable("Guns");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankEngine", b =>
                {
                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.HasKey("EngineId", "TankId");

                    b.HasIndex("TankId");

                    b.ToTable("TankEngines");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankRadio", b =>
                {
                    b.Property<int>("RadioId")
                        .HasColumnType("int");

                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.HasKey("RadioId", "TankId");

                    b.HasIndex("TankId");

                    b.ToTable("TankRadios");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankSuspension", b =>
                {
                    b.Property<int>("SuspensionId")
                        .HasColumnType("int");

                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.HasKey("SuspensionId", "TankId");

                    b.HasIndex("TankId");

                    b.ToTable("TankSuspensions");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankTurret", b =>
                {
                    b.Property<int>("TurretId")
                        .HasColumnType("int");

                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.HasKey("TurretId", "TankId");

                    b.HasIndex("TankId");

                    b.ToTable("TankTurrets");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TurretGun", b =>
                {
                    b.Property<int>("TurretId")
                        .HasColumnType("int");

                    b.Property<int>("GunId")
                        .HasColumnType("int");

                    b.HasKey("TurretId", "GunId");

                    b.HasIndex("GunId");

                    b.ToTable("TurretGuns");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Nation", b =>
                {
                    b.Property<int>("NationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationId"));

                    b.Property<string>("NationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PictureId")
                        .HasColumnType("int");

                    b.HasKey("NationId");

                    b.HasIndex("PictureId");

                    b.ToTable("Nations");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PictureId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PictureId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Radio", b =>
                {
                    b.Property<int>("RadioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RadioId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("SignalRange")
                        .HasColumnType("int");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("RadioId");

                    b.ToTable("Radios");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Suspension", b =>
                {
                    b.Property<int>("SuspensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuspensionId"));

                    b.Property<double>("LoadLimit")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<int>("TraverseSpeed")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("SuspensionId");

                    b.ToTable("Suspensions");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Tank", b =>
                {
                    b.Property<int>("TankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TankId"));

                    b.Property<int>("ArmorId")
                        .HasColumnType("int");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationId")
                        .HasColumnType("int");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("TankId");

                    b.HasIndex(new[] { "NationId" }, "IX_Tanks_NationId");

                    b.HasIndex(new[] { "TypeId" }, "IX_Tanks_TypeId");

                    b.ToTable("Tanks");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.TankType", b =>
                {
                    b.Property<int>("TankTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TankTypeId"));

                    b.Property<string>("TypeMachine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TankTypeId");

                    b.ToTable("TankTypes");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Turret", b =>
                {
                    b.Property<int>("TurretId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurretId"));

                    b.Property<int>("Overview")
                        .HasColumnType("int");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.Property<double>("Turn")
                        .HasColumnType("float");

                    b.Property<int>("TurretFront")
                        .HasColumnType("int");

                    b.Property<string>("TurretName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurretRear")
                        .HasColumnType("int");

                    b.Property<int>("TurretSide")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("TurretId");

                    b.ToTable("Turrets");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Armor", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Tank", "Tank")
                        .WithOne("Armor")
                        .HasForeignKey("Tank_Wiki_React_ASP_App.Server.Models.Armor", "TankId");

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankEngine", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Engine", "Engine")
                        .WithMany("TankEngines")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Tank", "Tank")
                        .WithMany("TankEngines")
                        .HasForeignKey("TankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Engine");

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankRadio", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Radio", "Radio")
                        .WithMany("TankRadios")
                        .HasForeignKey("RadioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Tank", "Tank")
                        .WithMany("TankRadios")
                        .HasForeignKey("TankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Radio");

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankSuspension", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Suspension", "Suspension")
                        .WithMany("TankSuspensions")
                        .HasForeignKey("SuspensionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Tank", "Tank")
                        .WithMany("TankSuspensions")
                        .HasForeignKey("TankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Suspension");

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TankTurret", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Tank", "Tank")
                        .WithMany("TankTurrets")
                        .HasForeignKey("TankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Turret", "Turret")
                        .WithMany("TankTurrets")
                        .HasForeignKey("TurretId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tank");

                    b.Navigation("Turret");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.ModelsManyToMany.TurretGun", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Gun", "Gun")
                        .WithMany("TurretGuns")
                        .HasForeignKey("GunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Turret", "Turret")
                        .WithMany("TurretGuns")
                        .HasForeignKey("TurretId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gun");

                    b.Navigation("Turret");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Nation", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Tank", b =>
                {
                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.Nation", "Nation")
                        .WithMany("Tanks")
                        .HasForeignKey("NationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tank_Wiki_React_ASP_App.Server.Models.TankType", "TankType")
                        .WithMany("Tanks")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nation");

                    b.Navigation("TankType");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Engine", b =>
                {
                    b.Navigation("TankEngines");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Gun", b =>
                {
                    b.Navigation("TurretGuns");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Nation", b =>
                {
                    b.Navigation("Tanks");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Radio", b =>
                {
                    b.Navigation("TankRadios");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Suspension", b =>
                {
                    b.Navigation("TankSuspensions");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Tank", b =>
                {
                    b.Navigation("Armor");

                    b.Navigation("TankEngines");

                    b.Navigation("TankRadios");

                    b.Navigation("TankSuspensions");

                    b.Navigation("TankTurrets");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.TankType", b =>
                {
                    b.Navigation("Tanks");
                });

            modelBuilder.Entity("Tank_Wiki_React_ASP_App.Server.Models.Turret", b =>
                {
                    b.Navigation("TankTurrets");

                    b.Navigation("TurretGuns");
                });
#pragma warning restore 612, 618
        }
    }
}
